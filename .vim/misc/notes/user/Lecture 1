Lecture 1

 • Make sure to install Python 2.x (not Python 3.x)

Scripting in Python

 • Why Scripting?
    ◦ Abstracts over low-level details
    ◦ Rapid development
    ◦ Easy to understand and change
    ◦ Pervasive
 • Why Python?
    ◦ Has everything you need
    ◦ Powerful and clear
    ◦ Highly portable
    ◦ Widely used in scientific computing
 • Python Versions
    ◦ <= 2.3 very old
    ◦ 2.4-2.6 still very common
    ◦ 2.7 current, but end of line for 2.x
    ◦ 3.x beyond the scope of this course
 • Interactive Python
    ◦ Great for trying things out
    ◦ Cannot save state
       ▸ Not appropriate for reuse
 • Running Python Scripts
    ◦ Linux/Unix
       ▸ python filename.py
          ▹ chmod 0755 filename.py
          ▹ ./filename.py
    ◦ Mac OS X
       ▸ Use Terminal, same as above
    ◦ Windows
       ▸ Not officially supported in this course

Introduction to Python

 • Numbers
    ◦ ints, longs, floats
    ◦ Exponential - 1.993e4
    ◦ octal - 0477
    ◦ hex 0x123f
    ◦ complex numbers
 • Numeric computations
    ◦ 5.0 / 2 = 2.5
    ◦ 5.0 // 2.0 = 2.0
 • Strings
    ◦ Single or double quotes (equivalent)
    ◦ Really long quotes (multiple lines) 3 quotes
    ◦ Python good at doing operations on Strings
    ◦ ‘123.0’.isdigit() → returns false
 • String Formatting
    ◦ ‘string: %d’ % (123)  →  ‘string: 123’
 • Strings != Integers != Floats
    ◦ Python is “strongly typed”
    ◦ Convert to integer
       ▸ int(‘5’)
       ▸ int(5.1234)
    ◦ Convert to float
       ▸ float(‘5’)
       ▸ float(5)
    ◦ Convert to String
       ▸ str(123)
       ▸ str(5.129)

Homework

 • Due Thursday
 • Remember to print a hard copy

